package(default_visibility = ["//visibility:public"])

cc_library(
    name = "malloc",
)

cc_library(
    name = "stl",
)

filegroup(
    name = "empty",
    srcs = [],
)

# This is the entry point for --crosstool_top.  Toolchains are found
# by lopping off the name of --crosstool_top and searching for
# "cc-compiler-${CPU}" in this BUILD file, where CPU is the target CPU
# specified in --cpu.
#
# This file group should include
#   * all cc_toolchain targets supported
#   * all file groups that said cc_toolchain might refer to,
# including the default_grte_top setting in the CROSSTOOL
# protobuf.
filegroup(
    name = "toolchain",
    srcs = [
        ":cc-compiler-local",
        ":cc-compiler-k8",
        ":cc-compiler-roborio",
        '@arm-linux-frc-gnueabi//:compiler_components',
        ':roborio-compiler-files',
    ],
)

cc_toolchain(
    name = "cc-compiler-local",
    all_files = ":empty",
    compiler_files = ":empty",
    cpu = "local",
    dwp_files = ":empty",
    dynamic_runtime_libs = [":empty"],
    linker_files = ":empty",
    objcopy_files = ":empty",
    static_runtime_libs = [":empty"],
    strip_files = ":empty",
    supports_param_files = 0,
)

cc_toolchain(
    name = "cc-compiler-k8",
    all_files = ":empty",
    compiler_files = ":empty",
    cpu = "local",
    dwp_files = ":empty",
    dynamic_runtime_libs = [":empty"],
    linker_files = ":empty",
    objcopy_files = ":empty",
    static_runtime_libs = [":empty"],
    strip_files = ":empty",
    supports_param_files = 0,
)

# Stub compiler
cc_toolchain(
    name = "cc-compiler-armeabi-v7a",
    all_files = ":empty",
    compiler_files = ":empty",
    cpu = "local",
    dwp_files = ":empty",
    dynamic_runtime_libs = [":empty"],
    linker_files = ":empty",
    objcopy_files = ":empty",
    static_runtime_libs = [":empty"],
    strip_files = ":empty",
    supports_param_files = 0,
)

filegroup(
  name = 'roborio-compiler-files',
  srcs = [
    '@arm-linux-frc-gnueabi//:compiler_components',
  ],
)

filegroup(
  name = 'roborio_linker_files',
  srcs = [
    '@arm-linux-frc-gnueabi//:ld',
    '@arm-linux-frc-gnueabi//:ar',
  ],
)
filegroup(
  name = 'roborio_compiler_files',
  srcs = [
    '@arm-linux-frc-gnueabi//:gcc',
    '@arm-linux-frc-gnueabi//:ld',
  ],
)

cc_toolchain(
    name = "cc-compiler-roborio",
    all_files = ":roborio-compiler-files",
    compiler_files = ':roborio_compiler_files',
    cpu = "roborio",
    dwp_files = ':empty',
    dynamic_runtime_libs = [":empty"],
    linker_files = ":roborio_linker_files",
    objcopy_files = '@arm-linux-frc-gnueabi//:objcopy',
    static_runtime_libs = [":empty"],
    strip_files = '@arm-linux-frc-gnueabi//:strip',
    supports_param_files = 0,
)
